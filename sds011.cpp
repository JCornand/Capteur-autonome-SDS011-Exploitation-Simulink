#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>  // UNIX standard function definitions 
#include <fcntl.h>   // File control definitions
#include <errno.h>   // Error number definitions 
#include <termios.h> // POSIX terminal control definitions 

int main(int argc, char *argv[])
{
	//
	//déclaration de mes vairables
	int fd_air, n;
	unsigned char commande [9];
	unsigned char retour[9];
	long int res;

	//
	//test du passage de paramètres
	if(argc != 2){
		printf("2 paramètres attendus veillez refaire, 2 ème argument /dev/ttyUSB0 ou 1\n");
		exit(-1);
	}

	printf("Le nombre d'argments passer est:%d\n\n",argc);
	printf("Nom de l'éxé: %s\nCommunication sur: %s\n",argv[0],argv[1]);


	//
	//param_liaison_serie=(9600,N,8,1);
	fd_air = open(argv[1],O_RDWR | O_NOCTTY | O_NDELAY); //| O_NDELAY);// /dev/ttyS0 port 1 de linus,ndelay ne mets pas ne pause le programme si problème avec DCD
	//rdwr pour lire et écrire,RDONLY pour lire uniquement
	fcntl(fd_air, F_SETFL, 0);
	struct termios options;


	if (fd_air == -1){
	  
	  	printf("\nerreur ouverture port série\n");
	  	exit(-1);
	  }
	else{
		printf("\nport série ouvert\n");
	}

	
	tcgetattr(fd_air, &options);//cherche les paramètres de la liason et les mets dans la struct
	options.c_cflag &= ~PARENB;
	options.c_cflag &= ~CSTOPB;
	options.c_cflag &= ~CSIZE;
	options.c_cflag |= CS8;
	cfsetispeed(&options, B9600);cfsetospeed(&options, B9600);//définis la vitesse ici 4800bauds
	options.c_cflag |= (CLOCAL | CREAD);
	tcsetattr(fd_air, TCSANOW, &options);//rentre les paramètres dedans

	while(1){
		//
		//lire
		
		read(fd_air,&retour,9);

		//
		//calcul+affichage
		res =  ((retour[4] * 256) + retour[3]) / 10;
		printf("PM2.5:%ldug/m3\n\n",res);
		res = ((retour[6] * 256) + retour[5]) / 10 ;
		printf("PM10:%ldug/m3\n\n",res);
		//
		//afficher 
			
		sleep(1);
	}
	
	
	
	close(fd_air);//ferme le socket

	exit(0);
}